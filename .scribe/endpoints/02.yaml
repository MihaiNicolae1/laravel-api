name: Station
description: 'Perform CRUD operations for station'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/station/{id}'
    metadata:
      groupName: Station
      groupDescription: 'Perform CRUD operations for station'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get station info'
      description: 'This endpoint lets you get a station info.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the station.'
        required: true
        example: 9
        type: integer
        custom: []
    cleanUrlParameters:
      id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": "success",
          "status_code": 200,
          "message": null,
          "data": {
          "id": 20,
          "name": "VirtaLTD",
          "latitude": 45.123213,
          "longitude": 14.12311,
          "company_id": 20,
          "address": "TestAddress",
          "created_at": "2023-03-28T06:50:59.000000Z",
          "updated_at": "2023-03-28T06:50:59.000000Z"
          },
          "meta": []
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: '{"message": "Resource not found"}'
        headers: []
        description: 'station not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/station
    metadata:
      groupName: Station
      groupDescription: 'Perform CRUD operations for station'
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new station'
      description: 'This endpoint lets you create a new station.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the company.'
        required: true
        example: ChargingSpot1
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'The latitude of the location.'
        required: true
        example: '+45.01231'
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'The longitude of the location.'
        required: true
        example: '-121.113122'
        type: string
        custom: []
      company_id:
        name: company_id
        description: 'The id of the company that owns it.'
        required: true
        example: 1
        type: integer
        custom: []
      address:
        name: address
        description: 'The address of the charging station.'
        required: true
        example: 'St.1, Helsinki, Finland'
        type: string
        custom: []
    cleanBodyParameters:
      name: ChargingSpot1
      latitude: '+45.01231'
      longitude: '-121.113122'
      company_id: 1
      address: 'St.1, Helsinki, Finland'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          scenario success={
          "status": "success",
          "status_code": 201,
          "message": "Entity successfully created.",
          "data": {
          "name": "VirtaLTD",
          "latitude": "45.123213",
          "longitude": "14.000",
          "company_id": 25,
          "address": "Helsinki,Finland",
          "updated_at": "2023-03-28T09:50:22.000000Z",
          "created_at": "2023-03-28T09:50:22.000000Z",
          "id": 29
          },
          "meta": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Company not found"}'
        headers: []
        description: 'company not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/station/{id}'
    metadata:
      groupName: Station
      groupDescription: 'Perform CRUD operations for station'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update existing station'
      description: 'This endpoint lets you update an existing station.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the station.'
        required: true
        example: atque
        type: string
        custom: []
    cleanUrlParameters:
      id: atque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the company.'
        required: false
        example: ChargingSpot1
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'The latitude of the location.'
        required: false
        example: '+45.01231'
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'The longitude of the location.'
        required: false
        example: '-121.113122'
        type: string
        custom: []
      company_id:
        name: company_id
        description: 'The id of the company that owns it.'
        required: false
        example: 1
        type: integer
        custom: []
      address:
        name: address
        description: 'The address of the charging station.'
        required: false
        example: 'St.1, Helsinki, Finland'
        type: string
        custom: []
    cleanBodyParameters:
      name: ChargingSpot1
      latitude: '+45.01231'
      longitude: '-121.113122'
      company_id: 1
      address: 'St.1, Helsinki, Finland'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          "status": "success",
          "status_code": 200,
          "message": "Entity successfully updated.",
          "data": 1,
          "meta": []
          }
        headers: []
        description: 'success{'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/station/{id}'
    metadata:
      groupName: Station
      groupDescription: 'Perform CRUD operations for station'
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an existing station'
      description: 'This endpoint lets you delete an existing station.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the station to be deleted.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          "status": "success",
          "status_code": 200,
          "message": "Entity successfully deleted.",
          "data": 1,
          "meta": []
          }
        headers: []
        description: 'success{'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/stations/radius
    metadata:
      groupName: Station
      groupDescription: 'Perform CRUD operations for station'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get stations within radius'
      description: 'This endpoint lets you get stations within a radius.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      radius_km:
        name: radius_km
        description: 'The km radius to look in.'
        required: true
        example: 50
        type: integer
        custom: []
      latitude:
        name: latitude
        description: 'The latitude of the location.'
        required: true
        example: '+45.01231'
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'The longitude of the location.'
        required: true
        example: '-121.113122'
        type: string
        custom: []
    cleanBodyParameters:
      radius_km: 50
      latitude: '+45.01231'
      longitude: '-121.113122'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          "status": "success",
          "status_code": 200,
          "message": null,
          "data": {
          "45.123213,14": [
          {
          "id": 28,
          "name": "123Test",
          "latitude": 45.123213,
          "longitude": 14,
          "company_id": 25,
          "address": "TestAddress",
          "created_at": "2023-03-28 09:09:13",
          "updated_at": "2023-03-28 09:09:13",
          "distance": 13.700001346387596
          }
          ],
          "45.123213,14.12311": [
          {
          "id": 7,
          "name": "123Test",
          "latitude": 45.123213,
          "longitude": 14.12311,
          "company_id": 6,
          "address": "TestAddress",
          "created_at": "2023-03-27 12:25:12",
          "updated_at": "2023-03-27 12:25:12",
          "distance": 16.76832087503264
          },
          {
          "id": 15,
          "name": "123Test",
          "latitude": 45.123213,
          "longitude": 14.12311,
          "company_id": 6,
          "address": "TestAddress",
          "created_at": "2023-03-27 12:27:54",
          "updated_at": "2023-03-27 12:27:54",
          "distance": 16.76832087503264
          }
          ]
        headers: []
        description: 'success{'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
